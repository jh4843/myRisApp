<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Flat Button -->
    <Color x:Key="DefaultColor" A="255" R="4" G ="167" B="250"/>
    <Color x:Key="HighlightColor" A="255" R="225" G ="225" B="225"/>
    <Color x:Key="PressedColor" A="255" R="215" G ="215" B="215"/>

    <SolidColorBrush x:Key="DefaultBrush" Color="{StaticResource DefaultColor}" />
    <SolidColorBrush x:Key="HighlightBrush" Color="{StaticResource HighlightColor}" />
    <SolidColorBrush x:Key="PressedBrush" Color="{StaticResource PressedColor}" />


    <Style x:Key="myFlatButtonStyle" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{StaticResource DefaultBrush}" />
        <Setter Property="BorderThickness" Value="0.5" />
        <Setter Property="BorderBrush" Value="#f2f2f2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{TemplateBinding Background}"
                    Padding="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    Margin ="{TemplateBinding Margin}"
                    CornerRadius="3">
                        <ContentControl HorizontalContentAlignment="Center" Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HighlightBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource PressedBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Flat Image Button -->
    <Color x:Key="DefaultImgBtnColor" A="255" R="255" G ="255" B="255"/>
    <Color x:Key="HighlightImgBtnColor" A="255" R="150" G ="150" B="150"/>
    <Color x:Key="PressedImgBtnColor" A="255" R="215" G ="215" B="215"/>

    <SolidColorBrush x:Key="DefaultImgBtnBrush" Color="{StaticResource DefaultImgBtnColor}" />
    <SolidColorBrush x:Key="HighlightImgBtnBrush" Color="{StaticResource HighlightImgBtnColor}" />
    <SolidColorBrush x:Key="PressedImgBtnBrush" Color="{StaticResource PressedImgBtnColor}" />

    <Style x:Key="myFlatImgButtonStyle" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{StaticResource DefaultImgBtnBrush}" />
        <Setter Property="BorderThickness" Value="0.5" />
        <Setter Property="BorderBrush" Value="#f2f2f2" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{TemplateBinding Background}"
                    Padding="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    Margin ="{TemplateBinding Margin}"
                    CornerRadius="3">
                        <ContentControl Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HighlightImgBtnBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource PressedImgBtnBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <!-- Circle Button -->
    <ControlTemplate x:Key="PresetButtonTemplate" TargetType="{x:Type Button}">
        <Grid Width="67" Height="20">
            <Image Source="../Images/btn_preset_nor.png" Name="imgN" />
            <Image Source="../Images/btn_preset_over.png" Name="imgO" Visibility="Hidden" />
            <Image Source="../Images/btn_preset_pre.png" Name="imgP" Visibility="Hidden" />
            <ContentPresenter Margin="22 0 0 0"  />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Visibility" Value="Hidden" TargetName="imgN" />
                <Setter Property="Visibility" Value="Visible" TargetName="imgO" />
                <Setter Property="Visibility" Value="Hidden" TargetName="imgP" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Visibility" Value="Hidden" TargetName="imgN" />
                <Setter Property="Visibility" Value="Hidden" TargetName="imgO" />
                <Setter Property="Visibility" Value="Visible" TargetName="imgP" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!-- TextBox -->
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="10pt" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush07}" />
        <Setter Property="Padding" Value="3 2" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <!--<Rectangle Name="Shadow"
                                   RadiusX="5" RadiusY="5"
                                   Fill="#f2f2f2"
                                   Margin="1 1 -1 -1"/>-->
                        <Rectangle Name="BG1" 
                                   RadiusX="4" RadiusY="4"
                                   Fill="#f2f2f2"
                                   Margin="1" />
                        <Rectangle Name="BG2"
                                   RadiusX="5" RadiusY="5"
                                   Fill="#f2f2f2"
                                   Margin="2 2 2 2" />
                        <Rectangle Name="BG3"
                                   RadiusX="5" RadiusY="5"
                                   Fill="#f2f2f2"
                                   Margin="3 3 3 3" />
                        <Rectangle Name="BG" RadiusX="5" RadiusY="5"
                                   Stroke="LightGray" StrokeThickness="1" />

                        <!-- ScrollViewer에 Content를 배치하는 구현입니다. 컨트롤이 작동하려면 이름을 PART_ContentHost로 지정해야 합니다.-->
                        <ScrollViewer Margin="{TemplateBinding Padding}" x:Name="PART_ContentHost" />

                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True" />
                                <Condition Property="IsReadOnly" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Fill" Value="#FF04a7fa" TargetName="BG1" />
                                <!--<Setter Property="Fill" Value="#FF04a7fa" TargetName="BG2" />
                                <Setter Property="Fill" Value="#FF04a7fa" TargetName="BG3" />-->

                                <!--<Setter Property="Fill" Value="#FF5F5F5F" TargetName="BG" />-->

                                <Setter Property="Foreground" Value="{DynamicResource BasementBrush}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Stroke" Value="#4C1E1B1C" TargetName="BG" />

                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- PasswordBox -->
    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="10pt" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush07}" />
        <Setter Property="Padding" Value="3 2" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid>

                        <!--<Rectangle Name="Shadow"
                                   RadiusX="5" RadiusY="5"
                                   Fill="#FF3E3E3E"
                                   Margin="1 1 -1 -1"/>-->

                        <Rectangle Name="BG1" 
                                   RadiusX="4" RadiusY="4"
                                   Fill="#f2f2f2"
                                   Margin="1" />
                        <Rectangle Name="BG2"
                                   RadiusX="5" RadiusY="5"
                                   Fill="#f2f2f2"
                                   Margin="2 2 2 2" />
                        <Rectangle Name="BG3"
                                   RadiusX="5" RadiusY="5"
                                   Fill="#f2f2f2"
                                   Margin="3 3 3 3" />

                        <Rectangle Name="BG" RadiusX="5" RadiusY="5"
                                   Stroke="LightGray" StrokeThickness="1" />

                        <!-- ScrollViewer에 Content를 배치하는 구현입니다. 컨트롤이 작동하려면 이름을 PART_ContentHost로 지정해야 합니다.-->
                        <ScrollViewer Margin="{TemplateBinding Padding}" x:Name="PART_ContentHost" />

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Fill" Value="#FF04a7fa" TargetName="BG1" />
                            <!--<Setter Property="Fill" Value="#FF575757" TargetName="BG2" />-->
                            <!--<Setter Property="Fill" Value="#FF5F5F5F" TargetName="BG3" />-->
                            <Setter Property="Foreground" Value="{DynamicResource BasementBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- CheckBox -->
    <!--<Style TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        -->
    <!-- Text Color -->
    <!--
        <Setter Property="Foreground" Value="{DynamicResource TextBrush07}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">

                    -->
    <!-- BulletDecorator는 확인 표시와 콘텐츠 간 기준 맞춤을 제공하는 데 사용됩니다.-->
    <!--
                    <BulletDecorator Background="Transparent" Margin="{TemplateBinding Padding}">
                        <BulletDecorator.Bullet>
                            <Grid Width="18" Height="18" Name="Body">
                                <Rectangle RadiusX="2" RadiusY="2"
                                           Fill="#FF3E3E3E"
                                           Margin="0 1 0 -1"/>

                                <Rectangle RadiusX="2" RadiusY="2"
                                           Stroke="#FF1E1B1C" StrokeThickness="1"
                                           Name="BG">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF666666" Offset="0"/>
                                            <GradientStop Color="#FF4C4C4C" Offset="0.5"/>
                                            <GradientStop Color="#FF404040" Offset="0.5"/>
                                            <GradientStop Color="#FF434343" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>

                                <Grid  x:Name="CheckMark" Margin="4" Visibility="Collapsed">
                                    <Path Data="F1 M433.9873,1110.3818 L428.356,1115.3807 C428.356,1115.3807 424.91659,1112.3721 424.91659,1112.3721 424.89052,1112.348 424.93002,1115.1751 424.93002,1115.1751 424.93002,1115.1751 428.36692,1118.2244 428.356,1118.213 428.356,1118.213 433.97878,1112.816 433.97878,1112.816" 
                                          Stretch="Fill" Fill="#FF2B2A2A" Margin="0.6,0,-0.6,0"/>
                                    <Path Data="F1 M433.9873,1110.3818 L428.356,1115.3807 C428.356,1115.3807 424.91659,1112.3721 424.91659,1112.3721 424.89052,1112.348 424.93002,1115.1751 424.93002,1115.1751 424.93002,1115.1751 428.36692,1118.2244 428.356,1118.213 428.356,1118.213 433.97878,1112.816 433.97878,1112.816" 
                                          Stretch="Fill" Fill="#FFE6E6E6"/>
                                </Grid>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="0 0 0 0" RecognizesAccessKey="True" />
                    </BulletDecorator>

                    -->
    <!-- IsChecked 확인란에 따라 Visibility 옵션을 사용하여 CheckMark를 숨기거나 표시합니다.-->
    <!--
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="CheckMark" />
                            <Setter Property="Foreground" Value="{DynamicResource TextBrush02}" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="BG">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF737373" Offset="0"/>
                                        <GradientStop Color="#FF5A5A5A" Offset="0.5"/>
                                        <GradientStop Color="#FF505050" Offset="0.5"/>
                                        <GradientStop Color="#FF585858" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Margin" Value="1 1 -1 -1" TargetName="Body" />
                            <Setter Property="Fill"  TargetName="BG">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF999999" Offset="0"/>
                                        <GradientStop Color="#FF707070" Offset="0.5"/>
                                        <GradientStop Color="#FF5E5E5E" Offset="0.5"/>
                                        <GradientStop Color="#FF606060" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value=".6" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!-- //////////////////////////////////////////////////////////////////////////////////////////////////// -->
    <!-- Slider -->
    <Style TargetType="{x:Type Slider}">
        <Setter Property="Background" Value="#FF000000" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Grid x:Name="GridRoot">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- TickBar는 Slider의 눈금을 표시합니다. -->
                        <TickBar Visibility="Collapsed" 
                                 x:Name="TopTick" Height="4" SnapsToDevicePixels="True" 
                                 Placement="Top" Fill="{TemplateBinding Background}"/>
                        <Rectangle Grid.Row="1" Height="3"
                                   Fill="#FF484848" RadiusX="1.5" RadiusY="1.5" Margin="0 1 0 -1" />
                        <Rectangle Grid.Row="1" Height="3"
                                   Fill="{TemplateBinding Background}" RadiusX="1.5" RadiusY="1.5" />

                        <!-- Track은 RepeatButton과 Thumb의 레이아웃을 설정합니다.-->
                        <Track Grid.Row="1" x:Name="PART_Track">
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource SliderThumbStyle}"/>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{DynamicResource TransparentRepeatButtonStyle}" Command="Slider.IncreaseLarge"/>
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{DynamicResource TransparentRepeatButtonStyle}" Command="Slider.DecreaseLarge"/>
                            </Track.DecreaseRepeatButton>
                        </Track>

                        <TickBar Visibility="Collapsed" Grid.Row="2" x:Name="BottomTick" Height="4" SnapsToDevicePixels="True" 
                                 Placement="Bottom" Fill="{TemplateBinding Foreground}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement" Value="TopLeft">
                            <Setter Property="Visibility" Value="Visible" TargetName="TopTick"/>
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="BottomRight">
                            <Setter Property="Visibility" Value="Visible" TargetName="BottomTick"/>
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter Property="Visibility" Value="Visible" TargetName="TopTick"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="BottomTick"/>
                        </Trigger>

                        <!-- 회전을 사용하여 기본 Horizontal에서 Vertical Slider를 만듭니다.-->
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="GridRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                            <!-- Track은 방향에 따라 자동으로 회전하므로 강제로 되돌려야 합니다. -->
                            <Setter TargetName="PART_Track" Property="Orientation" Value="Horizontal"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value=".5" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Slider Thumb -->
    <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Width" Value="11"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Rectangle RadiusX="1.5" RadiusY="1.5" 
                                   Stroke="#FF000000" StrokeThickness="1">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                    <GradientStop Color="#FF595959" Offset="0"/>
                                    <GradientStop Color="#FF545454" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="Ellipse" Height="10" Margin="1">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                    <GradientStop Color="#FFAAAAAA" Offset="0"/>
                                    <GradientStop Color="#FF9D9D9D" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" Value="White" TargetName="Ellipse"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>